<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Aleksandr Zubarev</title><link>https://zualex.com/</link><description>Recent content on Aleksandr Zubarev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 27 Apr 2021 14:14:23 +0300</lastBuildDate><atom:link href="https://zualex.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Copy-on-write в PHP</title><link>https://zualex.com/posts/copy-on-write-php/</link><pubDate>Tue, 27 Apr 2021 14:14:23 +0300</pubDate><guid>https://zualex.com/posts/copy-on-write-php/</guid><description>Copy-on-write или копирование при записи — один из способов управлением памятью. Но перед тем как давать какие-то определения, предлагаю рассмотреть пример:
function handle(array $array) { $result = []; // ... return $result; } $largeArray = getLargeArray(); handle($largeArray); В данном примере есть функция handle. В эту функцию передаётся массив большого размера. По умолчанию в PHP передача аргументов происходит по значению. Это означает, что если изменить значение аргумента внутри функции, то вне функции значение всё равно останется прежним.</description></item><item><title>PHP производительность array_merge в цикле</title><link>https://zualex.com/posts/php-array_merge-performance-in-a-loop/</link><pubDate>Wed, 24 Mar 2021 11:47:29 +0300</pubDate><guid>https://zualex.com/posts/php-array_merge-performance-in-a-loop/</guid><description>Если использовать array_merge в цикле, то phpStrom + плагин Php Inspections (EA Extended) даёт подсказку: [EA] 'array_merge(...)' is used in a loop and is a resources greedy construction. Стало интересно, насколько сильно влияет на произовдительность использование array_merge в цикле и какие есть альтернативные решения.
Рассмотрим пример. Имеется список товаров следующей структуры:
$products = [ ['id' =&amp;gt; 1, 'tags' =&amp;gt; ['tag_1', 'tag_2', 'tag_3']], ['id' =&amp;gt; 2, 'tags' =&amp;gt; ['tag_1', 'tag_2', 'tag_3']], ]; Нужно получить список всех тегов.</description></item><item><title>Из тимлида в разработчики</title><link>https://zualex.com/posts/team-leader-to-developer/</link><pubDate>Mon, 07 Sep 2020 09:00:00 +0300</pubDate><guid>https://zualex.com/posts/team-leader-to-developer/</guid><description>Предыстория Начну с того, как я стал тимлидом.
Откликнулся на вакансию разработчика, пригласили на собеседование. Собеседование было обычное, ничем не отличающееся от других моих собеседований, но в конце начали задавать вопросы связанные с управлением командой. На все эти вопросы отвечал по интуиции, что то мог ответить исходя из опыта.
В итоге собеседование прошел успешно и получил оффер на роль старшего разработчика, но после 3-х месяцев испытательного срока моя роль превращается в тимлида.</description></item><item><title>Aleksandr Zubarev</title><link>https://zualex.com/about/</link><pubDate>Thu, 24 Oct 2019 16:51:21 +0300</pubDate><guid>https://zualex.com/about/</guid><description>Senior Software Engineer – Drimsim Experienced PHP Developer
7+ years in Software Development and 7+ years in PHP. 2+ years in Agile Development – developing software using Scrum methodology. Test-driven development (TDD), Refactoring, Continuous Integration. Languages: PHP, Python, Javascript, SQL, HTML5/CSS3 Frameworks: Laravel, Yii, Symfony, Zend Framework, React Others: Docker, Vagrant, Git, MySQL, PostgreSQL, Redis Senior Software Engineer at Drimsim, Barcelona, Spain Sep 2018 — Present
Drimsim - universal SIM card for traveling around the world.</description></item><item><title>Мои жизненные принципы</title><link>https://zualex.com/posts/my-life-principles/</link><pubDate>Thu, 15 Aug 2019 19:12:42 +0300</pubDate><guid>https://zualex.com/posts/my-life-principles/</guid><description>Цени время Деньги можно заработать, а потраченное впустую время не вернуть. Не позволяй слишком много тратить время на то, что не приносит тебе пользы.
Постоянно развивайся Вкладывай время и усилия в своё развитие, это окупится.
Будь честным Выстраивай доверительные отношения, даже если тебя обманывают, всё равно продолжай быть честным.
Будь пунктуальным Уважай чужое время и не опаздывай. Видишь, что не успеваешь, предупреди.
Будь профессионалом На работе будь профессионалом в своем деле, тебе за это платят деньги.</description></item><item><title>Как я не попал в Яндекс</title><link>https://zualex.com/posts/how-i-failed-the-interview-in-yandex/</link><pubDate>Wed, 26 Jun 2019 20:41:57 +0300</pubDate><guid>https://zualex.com/posts/how-i-failed-the-interview-in-yandex/</guid><description>Эта статья о том, как обычный PHP разработчик готовился к собеседованию и чуть не попал в Яндекс в сентябре 2018 года. Перед тем как описывать сам процесс прохождения собеседования, я бы хотел рассказать, что происходило за месяц до собеседования.
За месяц до собеседования В этот момент я еще не думал о Яндексе и Яндекс обо мне. Я желал просто сменить свою текущую работу. Своё желание о смене работы я заранее огласил своему руководству и со спокойной душой обновил резюме, начитался как проходить собеседования и стал искать работу.</description></item></channel></rss>